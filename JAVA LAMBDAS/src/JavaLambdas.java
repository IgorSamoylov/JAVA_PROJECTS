public class JavaLambdas {

    public static void main(String ... args) {

        LambdaInterface lambda1;        // 1. Определение ссылки на функциональный интерфейс +
        lambda1 =  (a, b) -> a + b;    /* 2. Создание лямбда-выражения

        Параметры лямбда-выражения соответствуют параметрам единственного метода интерфейса LambdaInterface,
        а результат соответствует возвращаемому результату метода интерфейса.
        При этом нам не надо использовать ключевое слово return для возврата результата из лямбда-выражения.
       */
        // 3. Использование лямбда-выражения в виде вызова единственного метода интерфейса:

        int result = lambda1.calculate(777,888);
        System.out.println(result);

        //При этом для одного функционального интерфейса мы можем определить множество лямбда-выражений.
        LambdaInterface lambda2 = (a, b) -> a * b;
        System.out.println(lambda2.calculate(700,1000));

        LambdaInterface lambda3 = (a, b) -> a / b;
        System.out.println(lambda3.calculate(888,10));

    }

}

interface LambdaInterface {
    int calculate(int x, int y);
}
/* Лямбда-выражение не выполняется само по себе,
 а образует реализацию метода, определенного в функциональном интерфейсе.
 При этом важно, что функциональный интерфейс должен содержать только один
 единственный метод без реализации. */
